import{m as h,c0 as l,f3 as u,a as g,c5 as _,cq as f,cA as d,k as w,g as p,as as E,p as q,s as F}from"./vendor.2b982caa.js";import{u as S}from"./FeatureStore.28679141.js";import{g as T,f as x}from"./projectionSupport.734c75c7.js";import{Y as j}from"./QueryEngine.6aa238f3.js";import{T as I,I as b}from"./geojson.d678b31d.js";import{m as C}from"./sourceUtils.dcbc13d2.js";import{K as k}from"./wfsUtils.ff712b71.js";import"./PooledRBush.acdf1764.js";import"./centroid.3981c0a4.js";import"./json.879c9adc.js";import"./QueryEngineResult.d3d18162.js";import"./quantizationUtils.201960a0.js";import"./WhereClause.7c2aac99.js";import"./utils.397d2bfc.js";import"./generateRendererUtils.2ba66aa4.js";import"./utils.96b514c0.js";import"./QueryEngineCapabilities.78217f95.js";import"./timeSupport.f11e9f6f.js";import"./xmlUtils.56e603f6.js";class J{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async e=>{var i;const{objectIdField:t}=this._queryEngine,s=await k((i=this._getFeatureUrl)!=null?i:"",this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map(r=>r.name),signal:e});await I(s),h(e);const a=b(s,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:t});if(!l(this._queryEngine.spatialReference,u))for(const r of a)g(r.geometry)&&(r.geometry=_(T(f(r.geometry,this._queryEngine.geometryType,!1,!1),u,this._queryEngine.spatialReference)));let n=1;for(const r of a){const o={};C(this._fieldsIndex,o,r.attributes,!0),r.attributes=o,r.attributes[t]==null&&(r.objectId=r.attributes[t]=n++)}return a}}destroy(){var e;(e=this._queryEngine)==null||e.destroy(),this._queryEngine=null}async load(e,t){const{getFeatureUrl:s,getFeatureOutputFormat:a,spatialReference:n,fields:i,geometryType:r,featureType:o,objectIdField:y,customParameters:m}=e;this._featureType=o,this._customParameters=m,this._getFeatureUrl=s,this._getFeatureOutputFormat=a,this._fieldsIndex=new d(i),await this._checkProjection(n),h(t),this._queryEngine=new j({fields:i,geometryType:r,hasM:!1,hasZ:!1,objectIdField:y,spatialReference:n,timeInfo:null,featureStore:new S({geometryType:r,hasM:!1,hasZ:!1})});const c=await this._snapshotFeatures(w(t.signal));return this._queryEngine.featureStore.addMany(c),{extent:this._queryEngine.fullExtent}}async applyEdits(){throw new p("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){var t;return this._customParameters=e,(t=this._snapshotTask)==null||t.abort(),this._snapshotTask=E(this._snapshotFeatures),this._snapshotTask.promise.then(s=>{this._queryEngine.featureStore.clear(),s&&this._queryEngine.featureStore.addMany(s)},s=>{this._queryEngine.featureStore.clear(),q(s)||F.getLogger("esri.layers.WFSLayer").error(new p("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:s}))}),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(e){try{await x(u,e)}catch{throw new p("unsupported-projection","Projection not supported",{spatialReference:e})}}}export{J as default};
