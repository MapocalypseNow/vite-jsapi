import{s as y,kY as m,aq as h,kZ as w,t as v,g as d,k_ as b,gF as x,k$ as _,l0 as F,l1 as E}from"./vendor.2b982caa.js";const p=y.getLogger("esri.layers.support.labelFormatUtils"),g={type:"simple",evaluate:()=>null},V={getAttribute:(a,l)=>a.field(l)};async function $(a,l,e){if(!a||!a.symbol)return g;const n=a.where,u=m(a),o=n?await h(()=>import("./WhereClause.7c2aac99.js"),["assets/WhereClause.7c2aac99.js","assets/vendor.2b982caa.js"]):null;let i;if(u.type==="arcade"){const r=await w(u.expression,e,l);if(v(r))return g;i={type:"arcade",evaluate(s){try{const t=r.evaluate({$feature:"attributes"in s?r.repurposeFeature(s):s});if(t!=null)return t.toString()}catch{p.error(new d("arcade-expression-error","Encountered an error when evaluating label expression for feature",{feature:s,expression:u}))}return null},needsHydrationToEvaluate:()=>F(u.expression)==null}}else i={type:"simple",evaluate:r=>u.expression.replace(/{[^}]*}/g,s=>{const t=s.slice(1,-1),c=l.get(t);if(!c)return s;let f=null;return"attributes"in r?r&&r.attributes&&(f=r.attributes[c.name]):f=r.field(c.name),f==null?"":k(f,c)})};if(n){let r;try{r=o.WhereClause.create(n,l)}catch(t){return p.error(new d("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:n,error:t})),g}const s=i.evaluate;i.evaluate=t=>{const c="attributes"in t?void 0:V;try{if(r.testFeature(t,c))return s(t)}catch(f){p.error(new d("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:n,feature:t,error:f}))}return null}}return i}function k(a,l){if(a==null)return"";const e=l.domain;if(e){if(e.type==="codedValue"||e.type==="coded-value"){const u=a;for(const o of e.codedValues)if(o.code===u)return o.name}else if(e.type==="range"){const u=+a,o="range"in e?e.range[0]:e.minValue,i="range"in e?e.range[1]:e.maxValue;if(o<=u&&u<=i)return e.name}}let n=a;return l.type==="date"||l.type==="esriFieldTypeDate"?n=b(n,E("short-date")):x(l)&&(n=_(+n)),n||""}export{$ as createLabelFunction,k as formatField};
